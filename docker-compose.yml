# docker-compose.yml (Versão final para AWS)
services:
  # API Gateway é o ponto de entrada único
  api-gateway:
    build: ./api-gateway
    # ✅ *** CORREÇÃO AQUI *** ✅
    image: 151567229120.dkr.ecr.us-east-1.amazonaws.com/chat-api-gateway:latest
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - servico-autenticacao
      - servico-mensagens

  # Serviço de Autenticação em Python
  servico-autenticacao:
    build:
      context: ./backend/servico-autenticacao
    # ✅ *** CORREÇÃO AQUI *** ✅
    image: 151567229120.dkr.ecr.us-east-1.amazonaws.com/chat-servico-autenticacao:latest
    expose:
      - "18080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:18080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço de Mensagens em Python com WebSocket
  servico-mensagens:
    build:
      context: ./backend/servico-mensagens
    # (Este já estava correto no seu arquivo original)
    image: 151567229120.dkr.ecr.us-east-1.amazonaws.com/chat-servico-mensagens:latest
    expose:
      - "18081"
    depends_on:
      servico-autenticacao:
        condition: service_healthy

  # Frontend React servido por Nginx
  frontend:
    build:
      context: ./frontend
    # (Este já estava correto no seu arquivo original)
    image: 151567229120.dkr.ecr.us-east-1.amazonaws.com/chat-frontend:latest
    expose:
      - "80"

# O banco de dados DynamoDB está na nuvem, então não precisamos dele aqui.
# Os volumes também não são necessários na produção (exceto se você quiser
# persistir algo no EC2, mas para o DynamoDB não precisa).
volumes: {}