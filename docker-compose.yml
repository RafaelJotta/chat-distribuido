# docker-compose.yml (Versão final para AWS)
services:
  # API Gateway é o ponto de entrada único
  api-gateway:
    build: ./api-gateway
    image: 151567229120.ecr.us-east-1.amazonaws.com/chat-api-gateway:latest
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - servico-autenticacao
      - servico-mensagens

  # Serviço de Autenticação em Python
  servico-autenticacao:
    build:
      context: ./backend/servico-autenticacao
    image: 151567229120.ecr.us-east-1.amazonaws.com/chat-servico-autenticacao:latest
    expose:
      - "18080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:18080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - DATABASE_URL=mongodb://mongo:27017
    depends_on:
      - mongo

  # Serviço de Mensagens em Python com WebSocket
  servico-mensagens:
    build:
      context: ./backend/servico-mensagens
    image: 151567229120.dkr.ecr.us-east-1.amazonaws.com/chat-servico-mensagens:latest
    expose:
      - "18081"
    environment:
      - DATABASE_URL=mongodb://mongo:27017
    depends_on:
      mongo:
        condition: service_started
      servico-autenticacao:
        condition: service_healthy

  # Frontend React servido por Nginx
  frontend:
    build:
      context: ./frontend
    image: 151567229120.dkr.ecr.us-east-1.amazonaws.com/chat-frontend:latest
    expose:
      - "80"

  # Novo: Serviço do Banco de Dados MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo
    # Não precisamos expor a porta do banco para o mundo exterior na AWS,
    # apenas para os outros containers, o que o Docker já faz.
    volumes:
      - mongo-data:/data/db

# Novo: Define o volume para persistir os dados do banco na máquina da AWS
volumes:
  mongo-data: